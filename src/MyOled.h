/**
    Class MyOled : Gestion d'un écran Oled Utilisant un GPIO d'un contrôleur ESP32
    @file MyOled.h (Héritage : Adafruit_SSD1306)
    @author Alain Dubé
    @version 1.0 17/03/21  
    
    Historique des versions   
                            Versions  Date      Auteur      Description
                            1.0      22/05/21   Ald         Première version de la classe
                            1.1      28/05/21   ALD         Ajout de la méthode : veilleExit()
                            
    platform = espressif32
    board = esp32doit-devkit-v1
    framework = arduino
    lib_deps = 
        adafruit/Adafruit GFX Library @ ^1.10.1
        adafruit/Adafruit SSD1306 @ ^2.4.0
        adafruit/Adafruit NeoPixel @ ^1.7.0
    Autres librairies (à copier dans le répertoire lib)
        Aucune
    Résolution 128 x 64
            Protocole I2C, Adresse : 0x3C (défaut)
            GPIO21 : SDA
            GPIO22 : SCL
    Exemple d'utilisation (ainsi que toutes les commandes héritées de la Librarie Adafruit)
        #include "MyOled.h"
        MyOled *myOled = new MyOled(&Wire, OLED_RESET, SCREEN_HEIGHT, SCREEN_WIDTH);
        myOled->init(OLED_I2C_ADDRESS);
        myOled->veilleDelay(30); //En secondes

        myOledViewWorking = new MyOledViewWorking();
        myOledViewWorking->setNomDuSysteme("nomDuSysteme");
        myOledViewWorking->setIpDuSysteme(WiFi.localIP().toString().c_str());
        myOledViewWorking->setStatusDuSysteme("Four OK");
        myOled->displayView(myOledViewWorking);

        if (myOled->veilleCheck()) cout << "\nEst en veille";

        loop:
            myOled->veilleCheck();
            myOled->updateCurrentView(myOledViewWorking); //Pour les animations dans la vue si utilisées

**/
#ifndef MYOLED_H
#define MYOLED_H

#include <string>
#include "MyOledView.h"

//Logo Ecole Du Web GROS
// (Horizontal) byte array of bitmap :
// NOTE: width NOT a multiple of 8 (required by some LCDs & printers)
//http : //en.radzio.dxp.pl/bitmap_converter/
const unsigned char Cegep16x16[] = {
    0x00, 0x00, 0x03, 0xF0, 0x07, 0xE0, 0x0F, 0xC0, 0x0F, 0x80, 0x0F, 0x18, 0x0E, 0x3C, 0x0C, 0x7E,
    0x08, 0x3E, 0x01, 0x1E, 0x03, 0x8E, 0x07, 0xC6, 0x0F, 0xC2, 0x1F, 0x80, 0x3F, 0x00, 0x7E, 0x00};

const unsigned char PushMan24x48_1[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xC3, 0x80, 0x02, 0x00, 0x40, 0x04, 0x00, 0x20, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x00, 0x08, 0x00, 0x10, 0x08, 0x00, 0x10, 0x08, 0x00, 0x20, 0x00, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x03, 0x80, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7C, 0x1C, 0x00, 0x00, 0x1C,
    0xFF, 0xFF, 0xF8, 0x00, 0x08, 0x38, 0x00, 0x0C, 0x38, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0B, 0xE0, 0x00, 0x09, 0xE0, 0x00, 0x08, 0xE0, 0x00, 0x08, 0x40, 0x00, 0x08, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00,
    0x00, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x11, 0x80, 0x00, 0x10, 0x40, 0x00, 0x20, 0x40, 0x00,
    0x20, 0x40, 0x00, 0xE0, 0x40, 0x01, 0xC0, 0x40, 0x03, 0x80, 0x40, 0x06, 0x00, 0x40, 0x0C, 0x00,
    0x40, 0x18, 0x00, 0x40, 0x30, 0x00, 0x40, 0x60, 0x00, 0x40, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00};

const unsigned char PushMan24x48_2[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x08, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x11, 0x00, 0x00, 0x10, 0x80, 0x00,
    0x10, 0x80, 0x00, 0x10, 0x80, 0x00, 0x60, 0x80, 0x00, 0xC0, 0x80, 0x00, 0xC0, 0x00, 0x01, 0x81,
    0x00, 0x02, 0x01, 0x00, 0x04, 0x01, 0x00, 0x08, 0x01, 0x00, 0x08, 0x01, 0x00, 0x10, 0x01, 0x00};

const unsigned char PushMan24x48_3[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x16, 0x00, 0x00, 0x32, 0x00, 0x00, 0x62, 0x00, 0x00, 0x42,
    0x00, 0x00, 0xC0, 0x00, 0x01, 0x84, 0x00, 0x01, 0x84, 0x00, 0x02, 0x04, 0x00, 0x04, 0x04, 0x00};

const unsigned char PushMan24x48_4[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x04, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x06, 0x00, 0x00, 0x04, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x30, 0x00, 0x00, 0x70, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xE0, 0x00};

const unsigned char PushMan24x48_5[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x18,
    0x00, 0x00, 0x38, 0x00, 0x00, 0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00};

const unsigned char PushMan24x48_6[] = {
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x01, 0xFF, 0x80, 0x02, 0x00, 0xC0, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x02, 0x00, 0x80, 0x01, 0xFF, 0x04, 0x00, 0x7E, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x0C, 0x30, 0x00, 0x0E, 0x30, 0x00, 0x0F, 0xF0, 0x00,
    0x0F, 0xE0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0xE0, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x09, 0x00, 0x00,
    0x09, 0x00, 0x00, 0x11, 0x00, 0x00, 0x10, 0x00, 0x00, 0x22, 0x00, 0x00, 0x62, 0x00, 0x00, 0xC2,
    0x00, 0x00, 0x80, 0x00, 0x01, 0x84, 0x00, 0x02, 0x04, 0x00, 0x02, 0x04, 0x00, 0x04, 0x04, 0x00};

const unsigned char PushMan24x48_7[] = {
    0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x01, 0xFF, 0x00, 0x02, 0x00, 0x80, 0x04, 0x00, 0x40, 0x08,
    0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00, 0x20, 0x08, 0x00,
    0x20, 0x04, 0x00, 0x40, 0x06, 0x00, 0xC0, 0x01, 0xFF, 0x00, 0x00, 0xFE, 0x1C, 0x00, 0x00, 0x18,
    0xFF, 0xFF, 0xF8, 0x00, 0x18, 0x38, 0x00, 0x1C, 0x30, 0x00, 0x1E, 0x30, 0x00, 0x1F, 0xF0, 0x00,
    0x1F, 0xE0, 0x00, 0x11, 0xE0, 0x00, 0x11, 0xE0, 0x00, 0x10, 0xC0, 0x00, 0x10, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00, 0x00, 0x10, 0x00,
    0x00, 0x18, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x11, 0x00, 0x00, 0x10, 0x80, 0x00,
    0x20, 0x80, 0x00, 0x60, 0x80, 0x00, 0xC0, 0x80, 0x00, 0xC0, 0x00, 0x01, 0x80, 0x00, 0x02, 0x01,
    0x00, 0x04, 0x01, 0x00, 0x04, 0x01, 0x00, 0x08, 0x01, 0x00, 0x10, 0x01, 0x00, 0x20, 0x01, 0x00};


//Pour la gestion du Oled
//lib_deps = adafruit / Adafruit SSD1306 @^2.4.0
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Adafruit_I2CDevice.h>

//lib_deps = bblanchon/ArduinoJson @ ^6.17.2
//#include <ArduinoJson.h>

class MyOled : public Adafruit_SSD1306 {
    public:

        int init(uint8_t addrI2C = 0x3C, bool displaySplash = true);  //Parfois 3D
        void veilleOn(bool active);

        MyOled(TwoWire *twi, uint8_t RST = 4, uint8_t rawHeight = 64, uint8_t rawWidth = 128) : Adafruit_SSD1306(rawWidth, rawHeight, twi, RST){ };
        void printSpecialChar(std::string spacialCaractere, int makeDelaySecondes = 0);
        void printIt(std::string toDisplay, bool displayAfter, int makeDelaySecondes = 0);
        void printIt(int posx, int posy, std::string toDisplay, bool displayAfter, int makeDelaySecondes = 0);

        //void afficherConfigWifi(String nomDuSysteme, String ssIDRandom, String PASSRandom);

        bool veilleCheck(bool debugMe = false);
        void veilleDelay(int nbreSecondes);
        void veilleExit();

        void displayView(MyOledView *view);
        void updateCurrentView(MyOledView *view); //Pour les animations dans la vue si utilisées

    private:
        unsigned char *PushMan24x48Pointers[7];
        void displaySplash(int makeDelaySecondes);
 
        static void vATaskSecondCount(void *pvParameters);
        static int veilleTimeLapse;
        static MyOledView *currentView;
        int veilleNbreSecondes = -1;
        bool veilleActif = false;

        String lastError;
    
};
#endif